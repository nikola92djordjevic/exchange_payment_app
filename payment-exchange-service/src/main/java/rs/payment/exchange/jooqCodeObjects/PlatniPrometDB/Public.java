/*
 * This file is generated by jOOQ.
 */
package PlatniPrometDB;


import PlatniPrometDB.tables.BalanceEntry;
import PlatniPrometDB.tables.BanknoteDetail;
import PlatniPrometDB.tables.CashRegister;
import PlatniPrometDB.tables.Currency;
import PlatniPrometDB.tables.ExchangeCashDenomination;
import PlatniPrometDB.tables.ExchangeJob;
import PlatniPrometDB.tables.ExchangeRate;
import PlatniPrometDB.tables.ExchangeRateEntry;
import PlatniPrometDB.tables.JobType;
import PlatniPrometDB.tables.Organisation;
import PlatniPrometDB.tables.Role;
import PlatniPrometDB.tables.User;
import PlatniPrometDB.tables.UserAuth;
import PlatniPrometDB.tables.UserPersonalInfo;
import PlatniPrometDB.tables.WorkPlace;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.balance_entry</code>.
     */
    public final BalanceEntry BALANCE_ENTRY = BalanceEntry.BALANCE_ENTRY;

    /**
     * The table <code>public.banknote_detail</code>.
     */
    public final BanknoteDetail BANKNOTE_DETAIL = BanknoteDetail.BANKNOTE_DETAIL;

    /**
     * The table <code>public.cash_register</code>.
     */
    public final CashRegister CASH_REGISTER = CashRegister.CASH_REGISTER;

    /**
     * The table <code>public.currency</code>.
     */
    public final Currency CURRENCY = Currency.CURRENCY;

    /**
     * The table <code>public.exchange_cash_denomination</code>.
     */
    public final ExchangeCashDenomination EXCHANGE_CASH_DENOMINATION = ExchangeCashDenomination.EXCHANGE_CASH_DENOMINATION;

    /**
     * The table <code>public.exchange_job</code>.
     */
    public final ExchangeJob EXCHANGE_JOB = ExchangeJob.EXCHANGE_JOB;

    /**
     * The table <code>public.exchange_rate</code>.
     */
    public final ExchangeRate EXCHANGE_RATE = ExchangeRate.EXCHANGE_RATE;

    /**
     * The table <code>public.exchange_rate_entry</code>.
     */
    public final ExchangeRateEntry EXCHANGE_RATE_ENTRY = ExchangeRateEntry.EXCHANGE_RATE_ENTRY;

    /**
     * The table <code>public.job_type</code>.
     */
    public final JobType JOB_TYPE = JobType.JOB_TYPE;

    /**
     * The table <code>public.organisation</code>.
     */
    public final Organisation ORGANISATION = Organisation.ORGANISATION;

    /**
     * The table <code>public.role</code>.
     */
    public final Role ROLE = Role.ROLE;

    /**
     * The table <code>public.user</code>.
     */
    public final User USER = User.USER;

    /**
     * The table <code>public.user_auth</code>.
     */
    public final UserAuth USER_AUTH = UserAuth.USER_AUTH;

    /**
     * The table <code>public.user_personal_info</code>.
     */
    public final UserPersonalInfo USER_PERSONAL_INFO = UserPersonalInfo.USER_PERSONAL_INFO;

    /**
     * The table <code>public.work_place</code>.
     */
    public final WorkPlace WORK_PLACE = WorkPlace.WORK_PLACE;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.BALANCE_ENTRY_BALANCE_ENTRY_ID_SEQ,
            Sequences.BANKNOTE_DETAIL_SEQ,
            Sequences.CASH_REGISTER_SEQ,
            Sequences.EXCHANGE_CASH_DENOMINATION_SEQ,
            Sequences.EXCHANGE_JOB_SEQ,
            Sequences.EXCHANGE_RATE_ENTRY_ID_SEQ,
            Sequences.EXCHANGE_RATE_ID_SEQ,
            Sequences.ORGANISATION_SEQ,
            Sequences.USER_SEQ,
            Sequences.WORK_PLACE_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            BalanceEntry.BALANCE_ENTRY,
            BanknoteDetail.BANKNOTE_DETAIL,
            CashRegister.CASH_REGISTER,
            Currency.CURRENCY,
            ExchangeCashDenomination.EXCHANGE_CASH_DENOMINATION,
            ExchangeJob.EXCHANGE_JOB,
            ExchangeRate.EXCHANGE_RATE,
            ExchangeRateEntry.EXCHANGE_RATE_ENTRY,
            JobType.JOB_TYPE,
            Organisation.ORGANISATION,
            Role.ROLE,
            User.USER,
            UserAuth.USER_AUTH,
            UserPersonalInfo.USER_PERSONAL_INFO,
            WorkPlace.WORK_PLACE
        );
    }
}
