/*
 * This file is generated by jOOQ.
 */
package PlatniPrometDB.tables.records;


import PlatniPrometDB.tables.ExchangeJob;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExchangeJobRecord extends UpdatableRecordImpl<ExchangeJobRecord> implements Record12<Long, Long, BigDecimal, Integer, Long, BigDecimal, BigDecimal, Long, Long, OffsetDateTime, LocalDate, LocalTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.exchange_job.exchange_job_id</code>.
     */
    public void setExchangeJobId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.exchange_job.exchange_job_id</code>.
     */
    public Long getExchangeJobId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.exchange_job.job_type_id</code>. 1 - Buy, 2 -
     * Sell
     */
    public void setJobTypeId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.exchange_job.job_type_id</code>. 1 - Buy, 2 -
     * Sell
     */
    public Long getJobTypeId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.exchange_job.received_amount</code>.
     */
    public void setReceivedAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.exchange_job.received_amount</code>.
     */
    public BigDecimal getReceivedAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.exchange_job.received_currency_code</code>.
     */
    public void setReceivedCurrencyCode(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.exchange_job.received_currency_code</code>.
     */
    public Integer getReceivedCurrencyCode() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.exchange_job.exchange_rate_entry_id</code>.
     */
    public void setExchangeRateEntryId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.exchange_job.exchange_rate_entry_id</code>.
     */
    public Long getExchangeRateEntryId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.exchange_job.middle_rate_amount</code>.
     */
    public void setMiddleRateAmount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.exchange_job.middle_rate_amount</code>.
     */
    public BigDecimal getMiddleRateAmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.exchange_job.exchange_amount</code>.
     */
    public void setExchangeAmount(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.exchange_job.exchange_amount</code>.
     */
    public BigDecimal getExchangeAmount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for
     * <code>public.exchange_job.exchange_cash_denomination_id</code>.
     */
    public void setExchangeCashDenominationId(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>public.exchange_job.exchange_cash_denomination_id</code>.
     */
    public Long getExchangeCashDenominationId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.exchange_job.user_id</code>.
     */
    public void setUserId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.exchange_job.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>public.exchange_job.timestamp_of_creation</code>.
     */
    public void setTimestampOfCreation(OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.exchange_job.timestamp_of_creation</code>.
     */
    public OffsetDateTime getTimestampOfCreation() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>public.exchange_job.date_of_creation</code>.
     */
    public void setDateOfCreation(LocalDate value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.exchange_job.date_of_creation</code>.
     */
    public LocalDate getDateOfCreation() {
        return (LocalDate) get(10);
    }

    /**
     * Setter for <code>public.exchange_job.time_of_creation</code>.
     */
    public void setTimeOfCreation(LocalTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.exchange_job.time_of_creation</code>.
     */
    public LocalTime getTimeOfCreation() {
        return (LocalTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, BigDecimal, Integer, Long, BigDecimal, BigDecimal, Long, Long, OffsetDateTime, LocalDate, LocalTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Long, BigDecimal, Integer, Long, BigDecimal, BigDecimal, Long, Long, OffsetDateTime, LocalDate, LocalTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ExchangeJob.EXCHANGE_JOB.EXCHANGE_JOB_ID;
    }

    @Override
    public Field<Long> field2() {
        return ExchangeJob.EXCHANGE_JOB.JOB_TYPE_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return ExchangeJob.EXCHANGE_JOB.RECEIVED_AMOUNT;
    }

    @Override
    public Field<Integer> field4() {
        return ExchangeJob.EXCHANGE_JOB.RECEIVED_CURRENCY_CODE;
    }

    @Override
    public Field<Long> field5() {
        return ExchangeJob.EXCHANGE_JOB.EXCHANGE_RATE_ENTRY_ID;
    }

    @Override
    public Field<BigDecimal> field6() {
        return ExchangeJob.EXCHANGE_JOB.MIDDLE_RATE_AMOUNT;
    }

    @Override
    public Field<BigDecimal> field7() {
        return ExchangeJob.EXCHANGE_JOB.EXCHANGE_AMOUNT;
    }

    @Override
    public Field<Long> field8() {
        return ExchangeJob.EXCHANGE_JOB.EXCHANGE_CASH_DENOMINATION_ID;
    }

    @Override
    public Field<Long> field9() {
        return ExchangeJob.EXCHANGE_JOB.USER_ID;
    }

    @Override
    public Field<OffsetDateTime> field10() {
        return ExchangeJob.EXCHANGE_JOB.TIMESTAMP_OF_CREATION;
    }

    @Override
    public Field<LocalDate> field11() {
        return ExchangeJob.EXCHANGE_JOB.DATE_OF_CREATION;
    }

    @Override
    public Field<LocalTime> field12() {
        return ExchangeJob.EXCHANGE_JOB.TIME_OF_CREATION;
    }

    @Override
    public Long component1() {
        return getExchangeJobId();
    }

    @Override
    public Long component2() {
        return getJobTypeId();
    }

    @Override
    public BigDecimal component3() {
        return getReceivedAmount();
    }

    @Override
    public Integer component4() {
        return getReceivedCurrencyCode();
    }

    @Override
    public Long component5() {
        return getExchangeRateEntryId();
    }

    @Override
    public BigDecimal component6() {
        return getMiddleRateAmount();
    }

    @Override
    public BigDecimal component7() {
        return getExchangeAmount();
    }

    @Override
    public Long component8() {
        return getExchangeCashDenominationId();
    }

    @Override
    public Long component9() {
        return getUserId();
    }

    @Override
    public OffsetDateTime component10() {
        return getTimestampOfCreation();
    }

    @Override
    public LocalDate component11() {
        return getDateOfCreation();
    }

    @Override
    public LocalTime component12() {
        return getTimeOfCreation();
    }

    @Override
    public Long value1() {
        return getExchangeJobId();
    }

    @Override
    public Long value2() {
        return getJobTypeId();
    }

    @Override
    public BigDecimal value3() {
        return getReceivedAmount();
    }

    @Override
    public Integer value4() {
        return getReceivedCurrencyCode();
    }

    @Override
    public Long value5() {
        return getExchangeRateEntryId();
    }

    @Override
    public BigDecimal value6() {
        return getMiddleRateAmount();
    }

    @Override
    public BigDecimal value7() {
        return getExchangeAmount();
    }

    @Override
    public Long value8() {
        return getExchangeCashDenominationId();
    }

    @Override
    public Long value9() {
        return getUserId();
    }

    @Override
    public OffsetDateTime value10() {
        return getTimestampOfCreation();
    }

    @Override
    public LocalDate value11() {
        return getDateOfCreation();
    }

    @Override
    public LocalTime value12() {
        return getTimeOfCreation();
    }

    @Override
    public ExchangeJobRecord value1(Long value) {
        setExchangeJobId(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value2(Long value) {
        setJobTypeId(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value3(BigDecimal value) {
        setReceivedAmount(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value4(Integer value) {
        setReceivedCurrencyCode(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value5(Long value) {
        setExchangeRateEntryId(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value6(BigDecimal value) {
        setMiddleRateAmount(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value7(BigDecimal value) {
        setExchangeAmount(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value8(Long value) {
        setExchangeCashDenominationId(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value9(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value10(OffsetDateTime value) {
        setTimestampOfCreation(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value11(LocalDate value) {
        setDateOfCreation(value);
        return this;
    }

    @Override
    public ExchangeJobRecord value12(LocalTime value) {
        setTimeOfCreation(value);
        return this;
    }

    @Override
    public ExchangeJobRecord values(Long value1, Long value2, BigDecimal value3, Integer value4, Long value5, BigDecimal value6, BigDecimal value7, Long value8, Long value9, OffsetDateTime value10, LocalDate value11, LocalTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExchangeJobRecord
     */
    public ExchangeJobRecord() {
        super(ExchangeJob.EXCHANGE_JOB);
    }

    /**
     * Create a detached, initialised ExchangeJobRecord
     */
    public ExchangeJobRecord(Long exchangeJobId, Long jobTypeId, BigDecimal receivedAmount, Integer receivedCurrencyCode, Long exchangeRateEntryId, BigDecimal middleRateAmount, BigDecimal exchangeAmount, Long exchangeCashDenominationId, Long userId, OffsetDateTime timestampOfCreation, LocalDate dateOfCreation, LocalTime timeOfCreation) {
        super(ExchangeJob.EXCHANGE_JOB);

        setExchangeJobId(exchangeJobId);
        setJobTypeId(jobTypeId);
        setReceivedAmount(receivedAmount);
        setReceivedCurrencyCode(receivedCurrencyCode);
        setExchangeRateEntryId(exchangeRateEntryId);
        setMiddleRateAmount(middleRateAmount);
        setExchangeAmount(exchangeAmount);
        setExchangeCashDenominationId(exchangeCashDenominationId);
        setUserId(userId);
        setTimestampOfCreation(timestampOfCreation);
        setDateOfCreation(dateOfCreation);
        setTimeOfCreation(timeOfCreation);
    }

    /**
     * Create a detached, initialised ExchangeJobRecord
     */
    public ExchangeJobRecord(PlatniPrometDB.tables.pojos.ExchangeJob value) {
        super(ExchangeJob.EXCHANGE_JOB);

        if (value != null) {
            setExchangeJobId(value.getExchangeJobId());
            setJobTypeId(value.getJobTypeId());
            setReceivedAmount(value.getReceivedAmount());
            setReceivedCurrencyCode(value.getReceivedCurrencyCode());
            setExchangeRateEntryId(value.getExchangeRateEntryId());
            setMiddleRateAmount(value.getMiddleRateAmount());
            setExchangeAmount(value.getExchangeAmount());
            setExchangeCashDenominationId(value.getExchangeCashDenominationId());
            setUserId(value.getUserId());
            setTimestampOfCreation(value.getTimestampOfCreation());
            setDateOfCreation(value.getDateOfCreation());
            setTimeOfCreation(value.getTimeOfCreation());
        }
    }
}
