/*
 * This file is generated by jOOQ.
 */
package PlatniPrometDB.tables.daos;


import PlatniPrometDB.tables.BanknoteDetail;
import PlatniPrometDB.tables.records.BanknoteDetailRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BanknoteDetailDao extends DAOImpl<BanknoteDetailRecord, PlatniPrometDB.tables.pojos.BanknoteDetail, Long> {

    /**
     * Create a new BanknoteDetailDao without any configuration
     */
    public BanknoteDetailDao() {
        super(BanknoteDetail.BANKNOTE_DETAIL, PlatniPrometDB.tables.pojos.BanknoteDetail.class);
    }

    /**
     * Create a new BanknoteDetailDao with an attached configuration
     */
    public BanknoteDetailDao(Configuration configuration) {
        super(BanknoteDetail.BANKNOTE_DETAIL, PlatniPrometDB.tables.pojos.BanknoteDetail.class, configuration);
    }

    @Override
    public Long getId(PlatniPrometDB.tables.pojos.BanknoteDetail object) {
        return object.getBanknoteDetailId();
    }

    /**
     * Fetch records that have <code>banknote_detail_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfBanknoteDetailId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.BANKNOTE_DETAIL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>banknote_detail_id IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByBanknoteDetailId(Long... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.BANKNOTE_DETAIL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>banknote_detail_id = value</code>
     */
    public PlatniPrometDB.tables.pojos.BanknoteDetail fetchOneByBanknoteDetailId(Long value) {
        return fetchOne(BanknoteDetail.BANKNOTE_DETAIL.BANKNOTE_DETAIL_ID, value);
    }

    /**
     * Fetch a unique record that has <code>banknote_detail_id = value</code>
     */
    public Optional<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchOptionalByBanknoteDetailId(Long value) {
        return fetchOptional(BanknoteDetail.BANKNOTE_DETAIL.BANKNOTE_DETAIL_ID, value);
    }

    /**
     * Fetch records that have <code>balance_entry_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfBalanceEntryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.BALANCE_ENTRY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>balance_entry_id IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByBalanceEntryId(Long... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.BALANCE_ENTRY_ID, values);
    }

    /**
     * Fetch records that have <code>x1 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX1(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X1, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x1 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX1(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X1, values);
    }

    /**
     * Fetch records that have <code>x2 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX2(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x2 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX2(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X2, values);
    }

    /**
     * Fetch records that have <code>x5 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX5(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X5, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x5 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX5(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X5, values);
    }

    /**
     * Fetch records that have <code>x10 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX10(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X10, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x10 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX10(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X10, values);
    }

    /**
     * Fetch records that have <code>x20 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX20(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X20, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x20 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX20(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X20, values);
    }

    /**
     * Fetch records that have <code>x50 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX50(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X50, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x50 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX50(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X50, values);
    }

    /**
     * Fetch records that have <code>x100 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX100(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X100, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x100 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX100(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X100, values);
    }

    /**
     * Fetch records that have <code>x200 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX200(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X200, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x200 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX200(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X200, values);
    }

    /**
     * Fetch records that have <code>x500 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX500(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X500, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x500 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX500(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X500, values);
    }

    /**
     * Fetch records that have <code>x1000 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX1000(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X1000, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x1000 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX1000(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X1000, values);
    }

    /**
     * Fetch records that have <code>x2000 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX2000(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X2000, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x2000 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX2000(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X2000, values);
    }

    /**
     * Fetch records that have <code>x5000 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchRangeOfX5000(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BanknoteDetail.BANKNOTE_DETAIL.X5000, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x5000 IN (values)</code>
     */
    public List<PlatniPrometDB.tables.pojos.BanknoteDetail> fetchByX5000(Integer... values) {
        return fetch(BanknoteDetail.BANKNOTE_DETAIL.X5000, values);
    }
}
