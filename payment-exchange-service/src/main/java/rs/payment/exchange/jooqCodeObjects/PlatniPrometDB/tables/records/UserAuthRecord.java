/*
 * This file is generated by jOOQ.
 */
package PlatniPrometDB.tables.records;


import PlatniPrometDB.tables.UserAuth;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAuthRecord extends UpdatableRecordImpl<UserAuthRecord> implements Record7<Long, String, Integer, String, Integer, Boolean, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_auth.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_auth.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_auth.salt</code>.
     */
    public void setSalt(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_auth.salt</code>.
     */
    public String getSalt() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_auth.iteration</code>.
     */
    public void setIteration(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_auth.iteration</code>.
     */
    public Integer getIteration() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.user_auth.hash</code>.
     */
    public void setHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_auth.hash</code>.
     */
    public String getHash() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user_auth.login_count</code>.
     */
    public void setLoginCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_auth.login_count</code>.
     */
    public Integer getLoginCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.user_auth.fl_locked</code>.
     */
    public void setFlLocked(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.user_auth.fl_locked</code>.
     */
    public Boolean getFlLocked() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.user_auth.date_of_expiry</code>.
     */
    public void setDateOfExpiry(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.user_auth.date_of_expiry</code>.
     */
    public LocalDate getDateOfExpiry() {
        return (LocalDate) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Integer, String, Integer, Boolean, LocalDate> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Integer, String, Integer, Boolean, LocalDate> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserAuth.USER_AUTH.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return UserAuth.USER_AUTH.SALT;
    }

    @Override
    public Field<Integer> field3() {
        return UserAuth.USER_AUTH.ITERATION;
    }

    @Override
    public Field<String> field4() {
        return UserAuth.USER_AUTH.HASH;
    }

    @Override
    public Field<Integer> field5() {
        return UserAuth.USER_AUTH.LOGIN_COUNT;
    }

    @Override
    public Field<Boolean> field6() {
        return UserAuth.USER_AUTH.FL_LOCKED;
    }

    @Override
    public Field<LocalDate> field7() {
        return UserAuth.USER_AUTH.DATE_OF_EXPIRY;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getSalt();
    }

    @Override
    public Integer component3() {
        return getIteration();
    }

    @Override
    public String component4() {
        return getHash();
    }

    @Override
    public Integer component5() {
        return getLoginCount();
    }

    @Override
    public Boolean component6() {
        return getFlLocked();
    }

    @Override
    public LocalDate component7() {
        return getDateOfExpiry();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getSalt();
    }

    @Override
    public Integer value3() {
        return getIteration();
    }

    @Override
    public String value4() {
        return getHash();
    }

    @Override
    public Integer value5() {
        return getLoginCount();
    }

    @Override
    public Boolean value6() {
        return getFlLocked();
    }

    @Override
    public LocalDate value7() {
        return getDateOfExpiry();
    }

    @Override
    public UserAuthRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserAuthRecord value2(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public UserAuthRecord value3(Integer value) {
        setIteration(value);
        return this;
    }

    @Override
    public UserAuthRecord value4(String value) {
        setHash(value);
        return this;
    }

    @Override
    public UserAuthRecord value5(Integer value) {
        setLoginCount(value);
        return this;
    }

    @Override
    public UserAuthRecord value6(Boolean value) {
        setFlLocked(value);
        return this;
    }

    @Override
    public UserAuthRecord value7(LocalDate value) {
        setDateOfExpiry(value);
        return this;
    }

    @Override
    public UserAuthRecord values(Long value1, String value2, Integer value3, String value4, Integer value5, Boolean value6, LocalDate value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAuthRecord
     */
    public UserAuthRecord() {
        super(UserAuth.USER_AUTH);
    }

    /**
     * Create a detached, initialised UserAuthRecord
     */
    public UserAuthRecord(Long userId, String salt, Integer iteration, String hash, Integer loginCount, Boolean flLocked, LocalDate dateOfExpiry) {
        super(UserAuth.USER_AUTH);

        setUserId(userId);
        setSalt(salt);
        setIteration(iteration);
        setHash(hash);
        setLoginCount(loginCount);
        setFlLocked(flLocked);
        setDateOfExpiry(dateOfExpiry);
    }

    /**
     * Create a detached, initialised UserAuthRecord
     */
    public UserAuthRecord(PlatniPrometDB.tables.pojos.UserAuth value) {
        super(UserAuth.USER_AUTH);

        if (value != null) {
            setUserId(value.getUserId());
            setSalt(value.getSalt());
            setIteration(value.getIteration());
            setHash(value.getHash());
            setLoginCount(value.getLoginCount());
            setFlLocked(value.getFlLocked());
            setDateOfExpiry(value.getDateOfExpiry());
        }
    }
}
