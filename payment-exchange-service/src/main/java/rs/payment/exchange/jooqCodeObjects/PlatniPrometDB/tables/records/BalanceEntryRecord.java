/*
 * This file is generated by jOOQ.
 */
package PlatniPrometDB.tables.records;


import PlatniPrometDB.tables.BalanceEntry;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BalanceEntryRecord extends UpdatableRecordImpl<BalanceEntryRecord> implements Record13<Long, Integer, Long, Long, String, BigDecimal, Long, Long, Long, Long, OffsetDateTime, LocalDate, LocalTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.balance_entry.balance_entry_id</code>.
     */
    public void setBalanceEntryId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.balance_entry.balance_entry_id</code>.
     */
    public Long getBalanceEntryId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.balance_entry.entry_side</code>. 1 - In, 2 - Out
     */
    public void setEntrySide(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.balance_entry.entry_side</code>. 1 - In, 2 - Out
     */
    public Integer getEntrySide() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.balance_entry.cash_register_id</code>.
     */
    public void setCashRegisterId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.balance_entry.cash_register_id</code>.
     */
    public Long getCashRegisterId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.balance_entry.entry_type_id</code>. 1 - Exchange,
     * 2 - Transfer
     */
    public void setEntryTypeId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.balance_entry.entry_type_id</code>. 1 - Exchange,
     * 2 - Transfer
     */
    public Long getEntryTypeId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.balance_entry.currency_code</code>.
     */
    public void setCurrencyCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.balance_entry.currency_code</code>.
     */
    public String getCurrencyCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.balance_entry.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.balance_entry.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.balance_entry.job_type_id</code>.
     */
    public void setJobTypeId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.balance_entry.job_type_id</code>.
     */
    public Long getJobTypeId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.balance_entry.job_id</code>.
     */
    public void setJobId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.balance_entry.job_id</code>.
     */
    public Long getJobId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.balance_entry.work_place_id</code>.
     */
    public void setWorkPlaceId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.balance_entry.work_place_id</code>.
     */
    public Long getWorkPlaceId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>public.balance_entry.user_id</code>.
     */
    public void setUserId(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.balance_entry.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>public.balance_entry.timestamp_of_creation</code>.
     */
    public void setTimestampOfCreation(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.balance_entry.timestamp_of_creation</code>.
     */
    public OffsetDateTime getTimestampOfCreation() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>public.balance_entry.date_of_creation</code>.
     */
    public void setDateOfCreation(LocalDate value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.balance_entry.date_of_creation</code>.
     */
    public LocalDate getDateOfCreation() {
        return (LocalDate) get(11);
    }

    /**
     * Setter for <code>public.balance_entry.time_of_creation</code>.
     */
    public void setTimeOfCreation(LocalTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.balance_entry.time_of_creation</code>.
     */
    public LocalTime getTimeOfCreation() {
        return (LocalTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Integer, Long, Long, String, BigDecimal, Long, Long, Long, Long, OffsetDateTime, LocalDate, LocalTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, Integer, Long, Long, String, BigDecimal, Long, Long, Long, Long, OffsetDateTime, LocalDate, LocalTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BalanceEntry.BALANCE_ENTRY.BALANCE_ENTRY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return BalanceEntry.BALANCE_ENTRY.ENTRY_SIDE;
    }

    @Override
    public Field<Long> field3() {
        return BalanceEntry.BALANCE_ENTRY.CASH_REGISTER_ID;
    }

    @Override
    public Field<Long> field4() {
        return BalanceEntry.BALANCE_ENTRY.ENTRY_TYPE_ID;
    }

    @Override
    public Field<String> field5() {
        return BalanceEntry.BALANCE_ENTRY.CURRENCY_CODE;
    }

    @Override
    public Field<BigDecimal> field6() {
        return BalanceEntry.BALANCE_ENTRY.AMOUNT;
    }

    @Override
    public Field<Long> field7() {
        return BalanceEntry.BALANCE_ENTRY.JOB_TYPE_ID;
    }

    @Override
    public Field<Long> field8() {
        return BalanceEntry.BALANCE_ENTRY.JOB_ID;
    }

    @Override
    public Field<Long> field9() {
        return BalanceEntry.BALANCE_ENTRY.WORK_PLACE_ID;
    }

    @Override
    public Field<Long> field10() {
        return BalanceEntry.BALANCE_ENTRY.USER_ID;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return BalanceEntry.BALANCE_ENTRY.TIMESTAMP_OF_CREATION;
    }

    @Override
    public Field<LocalDate> field12() {
        return BalanceEntry.BALANCE_ENTRY.DATE_OF_CREATION;
    }

    @Override
    public Field<LocalTime> field13() {
        return BalanceEntry.BALANCE_ENTRY.TIME_OF_CREATION;
    }

    @Override
    public Long component1() {
        return getBalanceEntryId();
    }

    @Override
    public Integer component2() {
        return getEntrySide();
    }

    @Override
    public Long component3() {
        return getCashRegisterId();
    }

    @Override
    public Long component4() {
        return getEntryTypeId();
    }

    @Override
    public String component5() {
        return getCurrencyCode();
    }

    @Override
    public BigDecimal component6() {
        return getAmount();
    }

    @Override
    public Long component7() {
        return getJobTypeId();
    }

    @Override
    public Long component8() {
        return getJobId();
    }

    @Override
    public Long component9() {
        return getWorkPlaceId();
    }

    @Override
    public Long component10() {
        return getUserId();
    }

    @Override
    public OffsetDateTime component11() {
        return getTimestampOfCreation();
    }

    @Override
    public LocalDate component12() {
        return getDateOfCreation();
    }

    @Override
    public LocalTime component13() {
        return getTimeOfCreation();
    }

    @Override
    public Long value1() {
        return getBalanceEntryId();
    }

    @Override
    public Integer value2() {
        return getEntrySide();
    }

    @Override
    public Long value3() {
        return getCashRegisterId();
    }

    @Override
    public Long value4() {
        return getEntryTypeId();
    }

    @Override
    public String value5() {
        return getCurrencyCode();
    }

    @Override
    public BigDecimal value6() {
        return getAmount();
    }

    @Override
    public Long value7() {
        return getJobTypeId();
    }

    @Override
    public Long value8() {
        return getJobId();
    }

    @Override
    public Long value9() {
        return getWorkPlaceId();
    }

    @Override
    public Long value10() {
        return getUserId();
    }

    @Override
    public OffsetDateTime value11() {
        return getTimestampOfCreation();
    }

    @Override
    public LocalDate value12() {
        return getDateOfCreation();
    }

    @Override
    public LocalTime value13() {
        return getTimeOfCreation();
    }

    @Override
    public BalanceEntryRecord value1(Long value) {
        setBalanceEntryId(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value2(Integer value) {
        setEntrySide(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value3(Long value) {
        setCashRegisterId(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value4(Long value) {
        setEntryTypeId(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value5(String value) {
        setCurrencyCode(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value6(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value7(Long value) {
        setJobTypeId(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value8(Long value) {
        setJobId(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value9(Long value) {
        setWorkPlaceId(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value10(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value11(OffsetDateTime value) {
        setTimestampOfCreation(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value12(LocalDate value) {
        setDateOfCreation(value);
        return this;
    }

    @Override
    public BalanceEntryRecord value13(LocalTime value) {
        setTimeOfCreation(value);
        return this;
    }

    @Override
    public BalanceEntryRecord values(Long value1, Integer value2, Long value3, Long value4, String value5, BigDecimal value6, Long value7, Long value8, Long value9, Long value10, OffsetDateTime value11, LocalDate value12, LocalTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BalanceEntryRecord
     */
    public BalanceEntryRecord() {
        super(BalanceEntry.BALANCE_ENTRY);
    }

    /**
     * Create a detached, initialised BalanceEntryRecord
     */
    public BalanceEntryRecord(Long balanceEntryId, Integer entrySide, Long cashRegisterId, Long entryTypeId, String currencyCode, BigDecimal amount, Long jobTypeId, Long jobId, Long workPlaceId, Long userId, OffsetDateTime timestampOfCreation, LocalDate dateOfCreation, LocalTime timeOfCreation) {
        super(BalanceEntry.BALANCE_ENTRY);

        setBalanceEntryId(balanceEntryId);
        setEntrySide(entrySide);
        setCashRegisterId(cashRegisterId);
        setEntryTypeId(entryTypeId);
        setCurrencyCode(currencyCode);
        setAmount(amount);
        setJobTypeId(jobTypeId);
        setJobId(jobId);
        setWorkPlaceId(workPlaceId);
        setUserId(userId);
        setTimestampOfCreation(timestampOfCreation);
        setDateOfCreation(dateOfCreation);
        setTimeOfCreation(timeOfCreation);
    }

    /**
     * Create a detached, initialised BalanceEntryRecord
     */
    public BalanceEntryRecord(PlatniPrometDB.tables.pojos.BalanceEntry value) {
        super(BalanceEntry.BALANCE_ENTRY);

        if (value != null) {
            setBalanceEntryId(value.getBalanceEntryId());
            setEntrySide(value.getEntrySide());
            setCashRegisterId(value.getCashRegisterId());
            setEntryTypeId(value.getEntryTypeId());
            setCurrencyCode(value.getCurrencyCode());
            setAmount(value.getAmount());
            setJobTypeId(value.getJobTypeId());
            setJobId(value.getJobId());
            setWorkPlaceId(value.getWorkPlaceId());
            setUserId(value.getUserId());
            setTimestampOfCreation(value.getTimestampOfCreation());
            setDateOfCreation(value.getDateOfCreation());
            setTimeOfCreation(value.getTimeOfCreation());
        }
    }
}
