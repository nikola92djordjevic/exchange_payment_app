/*
 * This file is generated by jOOQ.
 */
package PlatniPrometDB.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExchangeRate implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long exchangeRateId;
    private LocalDate timestampOfStart;
    private LocalDate timestampOfEnd;
    private Boolean flActive;
    private Long createdBy;
    private LocalDateTime timestampOfCreation;
    private Long changedBy;
    private LocalDateTime timestampOfChange;

    public ExchangeRate() {}

    public ExchangeRate(ExchangeRate value) {
        this.exchangeRateId = value.exchangeRateId;
        this.timestampOfStart = value.timestampOfStart;
        this.timestampOfEnd = value.timestampOfEnd;
        this.flActive = value.flActive;
        this.createdBy = value.createdBy;
        this.timestampOfCreation = value.timestampOfCreation;
        this.changedBy = value.changedBy;
        this.timestampOfChange = value.timestampOfChange;
    }

    public ExchangeRate(
        Long exchangeRateId,
        LocalDate timestampOfStart,
        LocalDate timestampOfEnd,
        Boolean flActive,
        Long createdBy,
        LocalDateTime timestampOfCreation,
        Long changedBy,
        LocalDateTime timestampOfChange
    ) {
        this.exchangeRateId = exchangeRateId;
        this.timestampOfStart = timestampOfStart;
        this.timestampOfEnd = timestampOfEnd;
        this.flActive = flActive;
        this.createdBy = createdBy;
        this.timestampOfCreation = timestampOfCreation;
        this.changedBy = changedBy;
        this.timestampOfChange = timestampOfChange;
    }

    /**
     * Getter for <code>public.exchange_rate.exchange_rate_id</code>.
     */
    public Long getExchangeRateId() {
        return this.exchangeRateId;
    }

    /**
     * Setter for <code>public.exchange_rate.exchange_rate_id</code>.
     */
    public void setExchangeRateId(Long exchangeRateId) {
        this.exchangeRateId = exchangeRateId;
    }

    /**
     * Getter for <code>public.exchange_rate.timestamp_of_start</code>.
     */
    public LocalDate getTimestampOfStart() {
        return this.timestampOfStart;
    }

    /**
     * Setter for <code>public.exchange_rate.timestamp_of_start</code>.
     */
    public void setTimestampOfStart(LocalDate timestampOfStart) {
        this.timestampOfStart = timestampOfStart;
    }

    /**
     * Getter for <code>public.exchange_rate.timestamp_of_end</code>.
     */
    public LocalDate getTimestampOfEnd() {
        return this.timestampOfEnd;
    }

    /**
     * Setter for <code>public.exchange_rate.timestamp_of_end</code>.
     */
    public void setTimestampOfEnd(LocalDate timestampOfEnd) {
        this.timestampOfEnd = timestampOfEnd;
    }

    /**
     * Getter for <code>public.exchange_rate.fl_active</code>.
     */
    public Boolean getFlActive() {
        return this.flActive;
    }

    /**
     * Setter for <code>public.exchange_rate.fl_active</code>.
     */
    public void setFlActive(Boolean flActive) {
        this.flActive = flActive;
    }

    /**
     * Getter for <code>public.exchange_rate.created_by</code>.
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>public.exchange_rate.created_by</code>.
     */
    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Getter for <code>public.exchange_rate.timestamp_of_creation</code>.
     */
    public LocalDateTime getTimestampOfCreation() {
        return this.timestampOfCreation;
    }

    /**
     * Setter for <code>public.exchange_rate.timestamp_of_creation</code>.
     */
    public void setTimestampOfCreation(LocalDateTime timestampOfCreation) {
        this.timestampOfCreation = timestampOfCreation;
    }

    /**
     * Getter for <code>public.exchange_rate.changed_by</code>.
     */
    public Long getChangedBy() {
        return this.changedBy;
    }

    /**
     * Setter for <code>public.exchange_rate.changed_by</code>.
     */
    public void setChangedBy(Long changedBy) {
        this.changedBy = changedBy;
    }

    /**
     * Getter for <code>public.exchange_rate.timestamp_of_change</code>.
     */
    public LocalDateTime getTimestampOfChange() {
        return this.timestampOfChange;
    }

    /**
     * Setter for <code>public.exchange_rate.timestamp_of_change</code>.
     */
    public void setTimestampOfChange(LocalDateTime timestampOfChange) {
        this.timestampOfChange = timestampOfChange;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ExchangeRate other = (ExchangeRate) obj;
        if (this.exchangeRateId == null) {
            if (other.exchangeRateId != null)
                return false;
        }
        else if (!this.exchangeRateId.equals(other.exchangeRateId))
            return false;
        if (this.timestampOfStart == null) {
            if (other.timestampOfStart != null)
                return false;
        }
        else if (!this.timestampOfStart.equals(other.timestampOfStart))
            return false;
        if (this.timestampOfEnd == null) {
            if (other.timestampOfEnd != null)
                return false;
        }
        else if (!this.timestampOfEnd.equals(other.timestampOfEnd))
            return false;
        if (this.flActive == null) {
            if (other.flActive != null)
                return false;
        }
        else if (!this.flActive.equals(other.flActive))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.timestampOfCreation == null) {
            if (other.timestampOfCreation != null)
                return false;
        }
        else if (!this.timestampOfCreation.equals(other.timestampOfCreation))
            return false;
        if (this.changedBy == null) {
            if (other.changedBy != null)
                return false;
        }
        else if (!this.changedBy.equals(other.changedBy))
            return false;
        if (this.timestampOfChange == null) {
            if (other.timestampOfChange != null)
                return false;
        }
        else if (!this.timestampOfChange.equals(other.timestampOfChange))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.exchangeRateId == null) ? 0 : this.exchangeRateId.hashCode());
        result = prime * result + ((this.timestampOfStart == null) ? 0 : this.timestampOfStart.hashCode());
        result = prime * result + ((this.timestampOfEnd == null) ? 0 : this.timestampOfEnd.hashCode());
        result = prime * result + ((this.flActive == null) ? 0 : this.flActive.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.timestampOfCreation == null) ? 0 : this.timestampOfCreation.hashCode());
        result = prime * result + ((this.changedBy == null) ? 0 : this.changedBy.hashCode());
        result = prime * result + ((this.timestampOfChange == null) ? 0 : this.timestampOfChange.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ExchangeRate (");

        sb.append(exchangeRateId);
        sb.append(", ").append(timestampOfStart);
        sb.append(", ").append(timestampOfEnd);
        sb.append(", ").append(flActive);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(timestampOfCreation);
        sb.append(", ").append(changedBy);
        sb.append(", ").append(timestampOfChange);

        sb.append(")");
        return sb.toString();
    }
}
